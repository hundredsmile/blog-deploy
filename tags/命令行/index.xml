<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>命令行 on 嘉树的世界</title><link>https://gaxu.xyz/tags/%E5%91%BD%E4%BB%A4%E8%A1%8C/</link><description>Recent content in 命令行 on 嘉树的世界</description><generator>Hugo</generator><language>zh</language><copyright>2023–2024 嘉树.</copyright><lastBuildDate>Wed, 28 Aug 2024 20:00:49 +0800</lastBuildDate><atom:link href="https://gaxu.xyz/tags/%E5%91%BD%E4%BB%A4%E8%A1%8C/index.xml" rel="self" type="application/rss+xml"/><item><title>在 Mac 上管理多个 GitHub 账号</title><link>https://gaxu.xyz/posts/multiple-gh-accounts/</link><pubDate>Tue, 27 Aug 2024 19:29:37 +0800</pubDate><guid>https://gaxu.xyz/posts/multiple-gh-accounts/</guid><description>动机 我有两个 GitHub 账号，希望一个是面向工作，另一个则是私人的。那么，如何在一台 Mac 上无缝切换这个两个账号呢？本文列出了关键步骤。其他操作系统应当类似。
生成 SSH 密钥 GitHub 提供了两种方式与远程仓库建立联系：SSH 和 HTTPS。简单来说，当我们向远程仓库 push 代码时，HTTPS 每次都需要提供所谓的 access token（当然这个活其实也只是第一次 push 的时候需要，因为 Mac 会把这个 token 存放在钥匙串里面，以后就不需要手动输入了），而 SSH 使用一对公钥和私钥取得认证（事先生成，然后本地和远程分别拿着私钥和公钥），不需要记住用户名和 token。就我们的目的而言，只能用 SSH 来实现。
假设我们有两个账号，personal 和 work，以下我们分别为它们生成 SSH 密钥。更多账号操作也是一样的。
cd ~/.ssh ssh-keygen -t rsa -C &amp;#34;email@personal.com&amp;#34; -f &amp;#34;gh-personal&amp;#34; ssh-keygen -t rsa -C &amp;#34;email@work.com&amp;#34; -f &amp;#34;gh-work&amp;#34; 运行完了之后，在 .ssh 文件夹下我们得到了四个文件：
gh-personal gh-personal.pub gh-work gh-work.pub 其中带 .pub 扩展名的是存公钥的，不带的是存私钥的。
分配私钥和公钥 将私钥加入 SSH Agent 上一步只是生成了密钥，还需要把私钥加入 Mac 的钥匙串 (keychain)，也就是保存密码。
ssh-add --apple-use-keychain ~/.</description></item></channel></rss>